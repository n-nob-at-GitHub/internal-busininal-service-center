name: Deploy Lambda Functions

on:
  push:
    branches: ["main"]
    paths:
      - "lambda/**"

jobs:
  deploy-lambdas:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Install zip
        run: sudo apt-get install -y zip

      - name: Deploy Lambda functions
        run: |
          # Lambda ディレクトリ名 → 関数名のマッピング
          declare -A LAMBDA_MAP
          LAMBDA_MAP=( 
            ["role"]="api-role"
            ["user"]="api-user"
            ["delivery-site"]="api-delivery-site"
            ["inbound-history"]="api-inbound-history"
            ["inbounds"]="api-inbounds"
            ["inbound-stocks"]="api-inbound-stocks"
            ["licenses"]="api-licenses"
            ["mail"]="api-mail"
            ["manufacturer"]="api-manufacturer"
            ["material"]="api-material"
            ["materials"]="api-materials"
            ["outbound-history"]="api-outbound-history"
            ["outbounds"]="api-outbounds"
            ["outbound-stocks"]="api-outbound-stocks"
            ["role"]="api-role"
            ["stock"]="api-stock"
          )

          for dir in "${!LAMBDA_MAP[@]}"; do
            echo "Deploying $dir → ${LAMBDA_MAP[$dir]}"
            # ディレクトリ存在チェック
            if [ ! -d "lambda/$dir" ]; then
                echo "Skipping $dir: directory not found"
                continue
            fi

            # ZIP 作成
            zip_file="${dir}.zip"
            cd lambda/$dir
            zip -r ../../$zip_file *
            cd ../../

            # Lambda 更新
            aws lambda update-function-code \
              --function-name ${LAMBDA_MAP[$dir]} \
              --zip-file fileb://$zip_file

            # ZIP 削除（オプション）
            rm $zip_file
          done

